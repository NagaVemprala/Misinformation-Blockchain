{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n// eslint-disable-next-line max-classes-per-file\nimport { Web3Context, isSupportedProvider } from 'web3-core';\nimport { Web3Eth, registeredSubscriptions } from 'web3-eth';\nimport Contract from 'web3-eth-contract';\nimport { ENS, registryAddresses } from 'web3-eth-ens';\nimport { Iban } from 'web3-eth-iban';\nimport { Personal } from 'web3-eth-personal';\nimport { Net } from 'web3-net';\nimport * as utils from 'web3-utils';\nimport { isNullish, isDataFormat, isContractInitOptions } from 'web3-utils';\nimport { DEFAULT_RETURN_FORMAT } from 'web3-types';\nimport { InvalidMethodParamsError } from 'web3-errors';\nimport abi from './abi.js';\nimport { initAccountsForContext } from './accounts.js';\nimport { Web3PkgInfo } from './version.js';\nexport class Web3 extends Web3Context {\n  constructor(providerOrContext) {\n    var _a;\n\n    if (isNullish(providerOrContext) || typeof providerOrContext === 'string' && providerOrContext.trim() === '' || typeof providerOrContext !== 'string' && !isSupportedProvider(providerOrContext) && !providerOrContext.provider) {\n      console.warn('NOTE: web3.js is running without provider. You need to pass a provider in order to interact with the network!');\n    }\n\n    let contextInitOptions = {};\n\n    if (typeof providerOrContext === 'string' || isSupportedProvider(providerOrContext)) {\n      contextInitOptions.provider = providerOrContext;\n    } else if (providerOrContext) {\n      contextInitOptions = providerOrContext;\n    } else {\n      contextInitOptions = {};\n    }\n\n    contextInitOptions.registeredSubscriptions = Object.assign(Object.assign({}, registeredSubscriptions), (_a = contextInitOptions.registeredSubscriptions) !== null && _a !== void 0 ? _a : {});\n    super(contextInitOptions);\n    const accounts = initAccountsForContext(this); // Init protected properties\n\n    this._wallet = accounts.wallet;\n    this._accountProvider = accounts;\n    this.utils = utils; // Have to use local alias to initiate contract context\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n\n    const self = this;\n\n    class ContractBuilder extends Contract {\n      constructor(jsonInterface, addressOrOptionsOrContext, optionsOrContextOrReturnFormat, contextOrReturnFormat, returnFormat) {\n        if (isContractInitOptions(addressOrOptionsOrContext) && isContractInitOptions(optionsOrContextOrReturnFormat)) {\n          throw new InvalidMethodParamsError('Should not provide options at both 2nd and 3rd parameters');\n        }\n\n        let address;\n        let options = {};\n        let context;\n        let dataFormat = DEFAULT_RETURN_FORMAT; // add validation so its not a breaking change\n\n        if (!isNullish(addressOrOptionsOrContext) && typeof addressOrOptionsOrContext !== 'object' && typeof addressOrOptionsOrContext !== 'string') {\n          throw new InvalidMethodParamsError();\n        }\n\n        if (typeof addressOrOptionsOrContext === 'string') {\n          address = addressOrOptionsOrContext;\n        }\n\n        if (isContractInitOptions(addressOrOptionsOrContext)) {\n          options = addressOrOptionsOrContext;\n        } else if (isContractInitOptions(optionsOrContextOrReturnFormat)) {\n          options = optionsOrContextOrReturnFormat;\n        } else {\n          options = {};\n        }\n\n        if (addressOrOptionsOrContext instanceof Web3Context) {\n          context = addressOrOptionsOrContext;\n        } else if (optionsOrContextOrReturnFormat instanceof Web3Context) {\n          context = optionsOrContextOrReturnFormat;\n        } else if (contextOrReturnFormat instanceof Web3Context) {\n          context = contextOrReturnFormat;\n        } else {\n          context = self.getContextObject();\n        }\n\n        if (returnFormat) {\n          dataFormat = returnFormat;\n        } else if (isDataFormat(optionsOrContextOrReturnFormat)) {\n          dataFormat = optionsOrContextOrReturnFormat;\n        } else if (isDataFormat(contextOrReturnFormat)) {\n          dataFormat = contextOrReturnFormat;\n        }\n\n        super(jsonInterface, address, options, context, dataFormat);\n        super.subscribeToContextEvents(self);\n      }\n\n    }\n\n    const eth = self.use(Web3Eth); // Eth Module\n\n    this.eth = Object.assign(eth, {\n      // ENS module\n      ens: self.use(ENS, registryAddresses.main),\n      // Iban helpers\n      Iban,\n      net: self.use(Net),\n      personal: self.use(Personal),\n      // Contract helper and module\n      Contract: ContractBuilder,\n      // ABI Helpers\n      abi,\n      // Accounts helper\n      accounts\n    });\n  }\n\n}\nWeb3.version = Web3PkgInfo.version;\nWeb3.utils = utils;\nWeb3.modules = {\n  Web3Eth,\n  Iban,\n  Net,\n  ENS,\n  Personal\n};\nexport default Web3;","map":{"version":3,"mappings":"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","names":["Web3Context","isSupportedProvider","Web3Eth","registeredSubscriptions","Contract","ENS","registryAddresses","Iban","Personal","Net","utils","isNullish","isDataFormat","isContractInitOptions","DEFAULT_RETURN_FORMAT","InvalidMethodParamsError","abi","initAccountsForContext","Web3PkgInfo","Web3","constructor","providerOrContext","trim","provider","console","warn","contextInitOptions","Object","_a","accounts","_wallet","wallet","_accountProvider","self","ContractBuilder","jsonInterface","addressOrOptionsOrContext","optionsOrContextOrReturnFormat","contextOrReturnFormat","returnFormat","address","options","context","dataFormat","getContextObject","subscribeToContextEvents","eth","use","assign","ens","main","net","personal","version"],"sources":["C:\\Users\\vemprala\\Documents\\Blockchain Projects\\faucet-dapp-starter-code-connect-wallet\\node_modules\\web3\\src\\web3.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n// eslint-disable-next-line max-classes-per-file\nimport {\n\tWeb3Context,\n\tWeb3ContextInitOptions,\n\tWeb3ContextObject,\n\tWeb3SubscriptionConstructor,\n\tisSupportedProvider\n} from 'web3-core';\nimport { Web3Eth, RegisteredSubscription, registeredSubscriptions } from 'web3-eth';\nimport Contract from 'web3-eth-contract';\nimport { ENS, registryAddresses } from 'web3-eth-ens';\nimport { Iban } from 'web3-eth-iban';\nimport { Personal } from 'web3-eth-personal';\nimport { Net } from 'web3-net';\nimport * as utils from 'web3-utils';\nimport { isNullish, isDataFormat, isContractInitOptions } from 'web3-utils';\nimport {\n\tAddress,\n\tContractAbi,\n\tContractInitOptions,\n\tEthExecutionAPI,\n\tSupportedProviders,\n\tDataFormat,\n\tDEFAULT_RETURN_FORMAT\n} from 'web3-types';\nimport { InvalidMethodParamsError } from 'web3-errors';\nimport abi from './abi.js';\nimport { initAccountsForContext } from './accounts.js';\nimport { Web3EthInterface } from './types.js';\nimport { Web3PkgInfo } from './version.js';\n\nexport class Web3<\n\tCustomRegisteredSubscription extends {\n\t\t[key: string]: Web3SubscriptionConstructor<EthExecutionAPI>;\n\t} = RegisteredSubscription,\n> extends Web3Context<EthExecutionAPI, CustomRegisteredSubscription & RegisteredSubscription> {\n\tpublic static version = Web3PkgInfo.version;\n\tpublic static utils = utils;\n\tpublic static modules = {\n\t\tWeb3Eth,\n\t\tIban,\n\t\tNet,\n\t\tENS,\n\t\tPersonal,\n\t};\n\n\tpublic utils: typeof utils;\n\n\tpublic eth: Web3EthInterface;\n\n\tpublic constructor(\n\t\tproviderOrContext?:\n\t\t\t| string\n\t\t\t| SupportedProviders<EthExecutionAPI>\n\t\t\t| Web3ContextInitOptions<EthExecutionAPI, CustomRegisteredSubscription>,\n\t) {\n\t\tif (\n\t\t\tisNullish(providerOrContext) ||\n\t\t\t(typeof providerOrContext === 'string' && providerOrContext.trim() === '') ||\n\t\t\t(typeof providerOrContext !== 'string' &&\n\t\t\t\t!isSupportedProvider(providerOrContext as SupportedProviders<EthExecutionAPI>) &&\n\t\t\t\t!(providerOrContext as Web3ContextInitOptions).provider)\n\t\t) {\n\t\t\tconsole.warn(\n\t\t\t\t'NOTE: web3.js is running without provider. You need to pass a provider in order to interact with the network!',\n\t\t\t);\n\t\t}\n\n\t\tlet contextInitOptions: Web3ContextInitOptions<EthExecutionAPI> = {};\n\t\tif (\n\t\t\ttypeof providerOrContext === 'string' ||\n\t\t\tisSupportedProvider(providerOrContext as SupportedProviders)\n\t\t) {\n\t\t\tcontextInitOptions.provider = providerOrContext as\n\t\t\t\t| undefined\n\t\t\t\t| string\n\t\t\t\t| SupportedProviders;\n\t\t} else if (providerOrContext) {\n\t\t\tcontextInitOptions = providerOrContext as Web3ContextInitOptions;\n\t\t} else {\n\t\t\tcontextInitOptions = {};\n\t\t}\n\n\t\tcontextInitOptions.registeredSubscriptions = {\n\t\t\t// all the Eth standard subscriptions\n\t\t\t...registeredSubscriptions,\n\t\t\t// overridden and combined with any custom subscriptions\n\t\t\t...(contextInitOptions.registeredSubscriptions ?? {}),\n\t\t} as CustomRegisteredSubscription;\n\n\t\tsuper(contextInitOptions);\n\t\tconst accounts = initAccountsForContext(this);\n\n\t\t// Init protected properties\n\t\tthis._wallet = accounts.wallet;\n\t\tthis._accountProvider = accounts;\n\n\t\tthis.utils = utils;\n\n\t\t// Have to use local alias to initiate contract context\n\t\t// eslint-disable-next-line @typescript-eslint/no-this-alias\n\t\tconst self = this;\n\n\t\tclass ContractBuilder<Abi extends ContractAbi> extends Contract<Abi> {\n\t\t\tpublic constructor(jsonInterface: Abi);\n\t\t\tpublic constructor(jsonInterface: Abi,\n\t\t\t\taddressOrOptionsOrContext?: Address | ContractInitOptions | Web3Context,\n\t\t\t\t);\n\t\t\tpublic constructor(\n\t\t\t\tjsonInterface: Abi,\n\t\t\t\taddressOrOptionsOrContext?: Address | ContractInitOptions | Web3Context,\n\t\t\t\toptionsOrContextOrReturnFormat?: ContractInitOptions | Web3Context | DataFormat,\n\t\t\t);\n\t\t\tpublic constructor(jsonInterface: Abi,\n\t\t\t\taddressOrOptionsOrContext?: Address | ContractInitOptions,\n\t\t\t\toptionsOrContextOrReturnFormat?: ContractInitOptions,\n\t\t\t\tcontextOrReturnFormat?: Web3Context | DataFormat,\n\t\t\t\t);\n\t\t\tpublic constructor(jsonInterface: Abi,\n\t\t\t\taddressOrOptionsOrContext?: Address | ContractInitOptions,\n\t\t\t\toptionsOrContextOrReturnFormat?: ContractInitOptions,\n\t\t\t\tcontextOrReturnFormat?: Web3Context | DataFormat,\n\t\t\t\t);\n\t\t\tpublic constructor(jsonInterface: Abi,\n\t\t\t\taddressOrOptionsOrContext?: Address | ContractInitOptions,\n\t\t\t\toptionsOrContextOrReturnFormat?: ContractInitOptions,\n\t\t\t\tcontextOrReturnFormat?: Web3Context | DataFormat,\n\t\t\t\treturnFormat?: DataFormat\n\t\t\t\t)\n\t\t\t\t  {\n\t\t\t\tif (isContractInitOptions(addressOrOptionsOrContext) && isContractInitOptions(optionsOrContextOrReturnFormat)) {\n\t\t\t\t\tthrow new InvalidMethodParamsError(\n\t\t\t\t\t\t'Should not provide options at both 2nd and 3rd parameters',\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tlet address: string | undefined;\n\t\t\t\tlet options: object = {};\n\t\t\t\tlet context: Web3ContextObject;\n\t\t\t\tlet dataFormat: DataFormat = DEFAULT_RETURN_FORMAT;\n\n\t\t\t\t// add validation so its not a breaking change\n\t\t\t\tif (!isNullish(addressOrOptionsOrContext) && typeof addressOrOptionsOrContext !== 'object' && typeof addressOrOptionsOrContext !== 'string') {\n\t\t\t\t\tthrow new InvalidMethodParamsError();\n\t\t\t\t}\n\n\t\t\t\tif (typeof addressOrOptionsOrContext === 'string') {\n\t\t\t\t\taddress = addressOrOptionsOrContext;\n\t\t\t\t}\n\t\t\t\tif (isContractInitOptions(addressOrOptionsOrContext)){\n\t\t\t\t\toptions = addressOrOptionsOrContext as object;\n\t\t\t\t} else if (isContractInitOptions(optionsOrContextOrReturnFormat)) {\n\t\t\t\t\toptions = optionsOrContextOrReturnFormat as object;\n\t\t\t\t} else {\n\t\t\t\t\toptions = {}\n\t\t\t\t}\n\n\t\t\t\tif (addressOrOptionsOrContext instanceof Web3Context) {\n\t\t\t\t\tcontext = addressOrOptionsOrContext;\n\t\t\t\t} else if (optionsOrContextOrReturnFormat instanceof Web3Context) {\n\t\t\t\t\tcontext = optionsOrContextOrReturnFormat;\n\t\t\t\t} else if (contextOrReturnFormat instanceof Web3Context) {\n\t\t\t\t\tcontext = contextOrReturnFormat;\n\t\t\t\t} else {\n\t\t\t\t\tcontext = self.getContextObject() as Web3ContextObject;\n\t\t\t\t}\n\n\t\t\t\tif (returnFormat){\n\t\t\t\t\tdataFormat = returnFormat;\n\t\t\t\t} else if (isDataFormat(optionsOrContextOrReturnFormat)) {\n\t\t\t\t\tdataFormat = optionsOrContextOrReturnFormat as DataFormat;\n\t\t\t\t} else if (isDataFormat(contextOrReturnFormat)) {\n\t\t\t\t\tdataFormat = contextOrReturnFormat;\n\t\t\t\t}\n\n\t\t\t\tsuper(jsonInterface,address, options, context, dataFormat)\n\t\t\t\tsuper.subscribeToContextEvents(self);\n\t\t\t}\n\t\t}\n\n\t\tconst eth = self.use(Web3Eth);\n\n\t\t// Eth Module\n\t\tthis.eth = Object.assign(eth, {\n\t\t\t// ENS module\n\t\t\tens: self.use(ENS, registryAddresses.main), // registry address defaults to main network\n\n\t\t\t// Iban helpers\n\t\t\tIban,\n\n\t\t\tnet: self.use(Net),\n\t\t\tpersonal: self.use(Personal),\n\n\t\t\t// Contract helper and module\n\t\t\tContract: ContractBuilder,\n\n\t\t\t// ABI Helpers\n\t\t\tabi,\n\n\t\t\t// Accounts helper\n\t\t\taccounts,\n\t\t});\n\t}\n}\nexport default Web3;\n"]},"metadata":{},"sourceType":"module"}