{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vemprala\\\\Documents\\\\Blockchain Projects\\\\faucet-dapp-starter-code-connect-wallet\\\\src\\\\Components\\\\CreateMisinfoPost.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport misInfo from '../misInfo';\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateMisinformationApp() {\n  _s();\n\n  const [rewardValue, setRewardValue] = useState(0);\n  const [minRating, setMinRating] = useState(0);\n  const [misInformationMsg, setMisInformationMsg] = useState(\"\");\n  const [signer, setSigner] = useState();\n\n  const handleRewardChange = event => {\n    setRewardValue(event.target.value);\n  };\n\n  const handleMinRatingChange = event => {\n    setMinRating(event.target.value);\n  };\n\n  const handleMsgChange = event => {\n    setMisInformationMsg(event.target.value);\n  };\n\n  const handlePost = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n    const _signer = await provider.getSigner();\n\n    setSigner(_signer);\n    console.log(\"_signer: \", _signer);\n    const misInfoFactoryContract = misInfo(provider);\n    const misInfoFactorySigner = misInfoFactoryContract.connect(_signer);\n    console.log(\"misInfoFactorySigner: \", misInfoFactorySigner);\n    const gasPrice = await provider.getGasPrice();\n    console.log(\"gasPrice --> \", gasPrice); //const estimatedGas = misInfoFactorySigner.createMisinformationApp(rewardValue, misInformationMsg, minRating).estimateGas();\n    //console.log(\"Estimated gas:\", estimatedGas.toString());\n    //const estimatedGas = provider.getGasPrice();\n    //const estimatedGas = await misInfoFactorySigner.getDeployedMisInfos().estimatedGas();\n\n    const tx = await provider.getTransaction(\"0x1467137f48176c2196a1b4ed0836ebaa7c584f7f0289bf3ce376b857c57bcc64\");\n    console.log(tx.gasLimit, \"   < ---- \", tx); //const usedGas = tx.gasUsed.toString(); // Get the used gas\n    //const estimatedGas = txn.estimatedGas();\n\n    await misInfoFactorySigner.createMisinformationApp(rewardValue, misInformationMsg, minRating, {\n      value: ethers.utils.parseEther((rewardValue / 1000).toFixed(3).toString()),\n      // Send 0.1 ethers\n      gasLimit: tx.maxFeePerGas * 1.2\n    });\n    console.log((rewardValue / 1000).toFixed(3).toString(), \" <---- \");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"grid\",\n      gridTemplateColumns: \"2fr 2fr 2fr\",\n      gap: \"2px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"rewardAmount\",\n      style: {\n        fontSize: \"20px\",\n        color: \"#5d0e8b\",\n        textAlign: \"left\"\n      },\n      children: \" Reward for debunking misinformation $ \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      id: \"rewardAmount\",\n      value: rewardValue,\n      onChange: handleRewardChange,\n      style: {\n        backgroundColor: \"white\",\n        padding: \"10px\",\n        border: \"1px solid #ccc\",\n        width: \"500px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"misInformationMsg\",\n      style: {\n        fontSize: \"20px\",\n        color: \"#5d0e8b\",\n        textAlign: \"left\"\n      },\n      children: \" Enter the misinformation message! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"misInformationMsg\",\n      value: misInformationMsg,\n      onChange: handleMsgChange,\n      style: {\n        backgroundColor: \"white\",\n        padding: \"10px\",\n        border: \"1px solid #ccc\",\n        width: \"500px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"minRating\",\n      style: {\n        fontSize: \"20px\",\n        color: \"#5d0e8b\",\n        textAlign: \"left\"\n      },\n      children: \"Set the minimum required quality rating! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      id: \"minRating\",\n      value: minRating,\n      onChange: handleMinRatingChange,\n      style: {\n        backgroundColor: \"white\",\n        padding: \"10px\",\n        border: \"1px solid #ccc\",\n        width: \"500px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePost,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateMisinformationApp, \"Cn5eeTOxRMf2t2Lp8lkkVqZWA88=\");\n\n_c = CreateMisinformationApp;\nexport default CreateMisinformationApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateMisinformationApp\");","map":{"version":3,"names":["useState","misInfo","ethers","CreateMisinformationApp","rewardValue","setRewardValue","minRating","setMinRating","misInformationMsg","setMisInformationMsg","signer","setSigner","handleRewardChange","event","target","value","handleMinRatingChange","handleMsgChange","handlePost","provider","providers","Web3Provider","window","ethereum","_signer","getSigner","console","log","misInfoFactoryContract","misInfoFactorySigner","connect","gasPrice","getGasPrice","tx","getTransaction","gasLimit","createMisinformationApp","utils","parseEther","toFixed","toString","maxFeePerGas","display","gridTemplateColumns","gap","fontSize","color","textAlign","backgroundColor","padding","border","width"],"sources":["C:/Users/vemprala/Documents/Blockchain Projects/faucet-dapp-starter-code-connect-wallet/src/Components/CreateMisinfoPost.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport misInfo from '../misInfo';\r\nimport { ethers } from \"ethers\";\r\n\r\nfunction CreateMisinformationApp() {\r\n    const [rewardValue, setRewardValue] = useState(0);\r\n    const [minRating, setMinRating] = useState(0);\r\n    const [misInformationMsg, setMisInformationMsg] = useState(\"\");\r\n    const [signer, setSigner] = useState();\r\n\r\n    const handleRewardChange = (event) => {\r\n        setRewardValue(event.target.value);\r\n    };\r\n\r\n    const handleMinRatingChange = (event) => {\r\n        setMinRating(event.target.value);\r\n    };\r\n\r\n    const handleMsgChange = (event) => {\r\n        setMisInformationMsg(event.target.value);\r\n    };\r\n\r\n    const handlePost = async () => {\r\n\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        const _signer = await provider.getSigner();\r\n        setSigner(_signer);\r\n        console.log(\"_signer: \", _signer);\r\n        const misInfoFactoryContract = misInfo(provider);\r\n        const misInfoFactorySigner = misInfoFactoryContract.connect(_signer);\r\n        console.log(\"misInfoFactorySigner: \", misInfoFactorySigner);\r\n        const gasPrice = await provider.getGasPrice();\r\n        console.log(\"gasPrice --> \", gasPrice);\r\n        //const estimatedGas = misInfoFactorySigner.createMisinformationApp(rewardValue, misInformationMsg, minRating).estimateGas();\r\n        //console.log(\"Estimated gas:\", estimatedGas.toString());\r\n        //const estimatedGas = provider.getGasPrice();\r\n        //const estimatedGas = await misInfoFactorySigner.getDeployedMisInfos().estimatedGas();\r\n        const tx = await provider.getTransaction(\"0x1467137f48176c2196a1b4ed0836ebaa7c584f7f0289bf3ce376b857c57bcc64\");\r\n        console.log(tx.gasLimit, \"   < ---- \", tx);\r\n        //const usedGas = tx.gasUsed.toString(); // Get the used gas\r\n        //const estimatedGas = txn.estimatedGas();\r\n        await misInfoFactorySigner.createMisinformationApp(rewardValue, misInformationMsg, minRating, {\r\n            value: ethers.utils.parseEther((rewardValue / 1000).toFixed(3).toString()), // Send 0.1 ethers\r\n            gasLimit: tx.maxFeePerGas * 1.2\r\n        });\r\n        console.log((rewardValue / 1000).toFixed(3).toString(), \" <---- \");\r\n    };\r\n\r\n    return (\r\n        <div style={{ display: \"grid\", gridTemplateColumns: \"2fr 2fr 2fr\", gap: \"2px\" }}>\r\n            <label htmlFor=\"rewardAmount\" style={{ fontSize: \"20px\", color: \"#5d0e8b\", textAlign: \"left\" }}> Reward for debunking misinformation $ </label>\r\n            <input\r\n                type=\"number\"\r\n                id=\"rewardAmount\"\r\n                value={rewardValue}\r\n                onChange={handleRewardChange}\r\n                style={{ backgroundColor: \"white\", padding: \"10px\", border: \"1px solid #ccc\", width: \"500px\" }}\r\n            />\r\n            <br />\r\n            <label htmlFor=\"misInformationMsg\" style={{ fontSize: \"20px\", color: \"#5d0e8b\", textAlign: \"left\" }}> Enter the misinformation message! </label>\r\n            <input\r\n                type=\"text\"\r\n                id=\"misInformationMsg\"\r\n                value={misInformationMsg}\r\n                onChange={handleMsgChange}\r\n                style={{ backgroundColor: \"white\", padding: \"10px\", border: \"1px solid #ccc\", width: \"500px\" }}\r\n            />\r\n            <br />\r\n            <label htmlFor=\"minRating\" style={{ fontSize: \"20px\", color: \"#5d0e8b\", textAlign: \"left\" }}>Set the minimum required quality rating! </label>\r\n            <input\r\n                type=\"number\"\r\n                id=\"minRating\"\r\n                value={minRating}\r\n                onChange={handleMinRatingChange}\r\n                style={{ backgroundColor: \"white\", padding: \"10px\", border: \"1px solid #ccc\", width: \"500px\" }}\r\n            />\r\n\r\n            <div>\r\n                <br></br>\r\n                <button onClick={handlePost}>Submit</button>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default CreateMisinformationApp;"],"mappings":"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"},"metadata":{},"sourceType":"module"}