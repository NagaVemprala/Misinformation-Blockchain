{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vemprala\\\\Documents\\\\Blockchain Projects\\\\faucet-dapp-starter-code-connect-wallet\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useCallback } from \"react\";\nimport \"./App.css\";\nimport misInfo from './misInfo';\nimport misInfoApp from './misInfoApp';\nimport CreateMisinformationEvidence from \"./Components/CreateMisinfoAppEvidence.js\";\nimport Web3 from 'web3';\nimport { ethers } from \"ethers\";\nimport CreateMisinformationApp from './Components/CreateMisinfoApp.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [walletAddress, setWalletAddress] = useState(\"\");\n  const [misinfoContract, setMisinfoContract] = useState();\n  const [signer, setSigner] = useState();\n  const [misInfoTopicAddresses, setMisInforTopicAddresses] = useState([]);\n  const [misInfoTopicDetails, setMisInforTopicDetails] = useState([]);\n  const [misInfoTopicPosts, setMisInforTopicPosts] = useState([]);\n  const [postEvidences, setPostEvidences] = useState([]);\n  const [myObjects, setMyObjects] = useState([]);\n  const [rewardObjects, setRewardObjects] = useState([10, 'Hello']);\n  const [selectedItemIndex, setSelectedItemIndex] = useState(0);\n  const [rating, setRating] = useState(0);\n\n  const connectWallet = async () => {\n    if (typeof window != \"undefined\" && typeof window.ethereum != \"undefined\") {\n      try {\n        console.log(\"In connectWallet\");\n        /* MetaMask is installed */\n\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        /* get accounts */\n\n        const accounts = await provider.send(\"eth_requestAccounts\", []);\n        /* get signer */\n\n        setSigner(await provider.getSigner());\n        /* local contract instance */\n\n        setMisinfoContract(misInfo(provider));\n        /* set active wallet address */\n\n        setWalletAddress(accounts[0]);\n        console.log(\"In connectWallet - End\");\n      } catch (err) {\n        console.error(err.message);\n      }\n    } else {\n      /* MetaMask is not installed */\n      console.log(\"Please install MetaMask\");\n    }\n  };\n\n  const getCurrentWalletConnected = async () => {\n    if (typeof window != \"undefined\" && typeof window.ethereum != \"undefined\") {\n      try {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const accounts = await provider.send(\"eth_accounts\", []);\n        setSigner(await provider.getSigner());\n\n        if (accounts.length > 0) {\n          setWalletAddress(accounts[0]);\n          console.log(accounts[0]);\n        } else {\n          console.log(\"Connect to MetaMask using the Connect button\");\n        }\n        /* local contract instance */\n\n\n        setMisinfoContract(misInfo(provider));\n        console.log(\"In getCurrentWalletConnected - End\");\n      } catch (err) {\n        console.error(err.message);\n      }\n    } else {\n      /* MetaMask is not installed */\n      console.log(\"Please install MetaMask\");\n    }\n  };\n\n  const addWalletListener = async () => {\n    if (typeof window != \"undefined\" && typeof window.ethereum != \"undefined\") {\n      window.ethereum.on(\"accountsChanged\", accounts => {\n        setWalletAddress(accounts[0]);\n        console.log(accounts[0]);\n      });\n    } else {\n      /* MetaMask is not installed */\n      setWalletAddress(\"\");\n      console.log(\"Please install MetaMask\");\n    }\n  };\n\n  const getContractAddresses = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const misInfoContractSigner = misinfoContract.connect(signer);\n    const misinformationContracts = await misInfoContractSigner.getDeployedMisInfos();\n    setMisInforTopicAddresses(misinformationContracts);\n    handleUpdateString(signer);\n  };\n\n  const fetchAvailableMisInfos = async (address, signer, item) => {\n    setSelectedItemIndex(item);\n    console.log('item: ', item, 'selectedItemIndex ', selectedItemIndex);\n    const tempObject = {\n      rewardValue: 0,\n      misInfoDetailedMsg: \"\"\n    };\n    const tempPosts = {\n      postMsg: \"\",\n      postAddress: \"\"\n    };\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const misInfoTopicContract = misInfoApp(provider, address);\n    const misInfoTopicSigner = misInfoTopicContract.connect(signer);\n    const misInformationTopic = await misInfoTopicSigner.sendMisinfoAppDetails();\n    const misInformationEvidenceAddresses = await misInfoTopicSigner.sendDebunkingUserAddresses();\n    console.log(\"misInformationEvidenceAddresses: \", misInformationEvidenceAddresses);\n    setPostEvidences([]);\n\n    if (misInformationEvidenceAddresses.length > 0) {\n      for (let i = 0; i < misInformationEvidenceAddresses.length; i++) {\n        tempPosts.postAddress = misInformationEvidenceAddresses[i];\n        tempPosts.postMsg = await misInfoTopicSigner.sendDebunkingUserStruct(misInformationEvidenceAddresses[i]);\n        console.log(\"tempPosts: \", tempPosts);\n        setPostEvidences(postEvidences => [...postEvidences, tempPosts]);\n      }\n\n      console.log(\"postEvidences: \", postEvidences);\n    }\n\n    tempObject.misInfoDetailedMsg = misInformationTopic[0];\n    tempObject.rewardValue = misInformationTopic[1];\n    setRewardObjects([misInformationTopic[0], misInformationTopic[1]]); // Append to the existing array\n\n    console.log(\"setRewardObjects: \", rewardObjects);\n  };\n\n  const handleUpdateString = async signer => {\n    const tempObjects = Array(misInfoTopicAddresses.length).fill().map(() => ({\n      rewardValue: 0,\n      misInfoDetailedMsg: \"\"\n    })); //const tempObjects = { rewardValue: 0, misInfoDetailedMsg: \"\"};\n\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n    for (let i = 0; i < misInfoTopicAddresses.length; i++) {\n      const contract = misInfoTopicAddresses[i];\n      /* local contract instance */\n\n      const misInfoTopicContract = misInfoApp(provider, contract);\n      const misInfoTopicSigner = misInfoTopicContract.connect(signer);\n      const misInformationTopic = await misInfoTopicSigner.sendMisinfoAppDetails(); //console.log(misInformationTopic[1]);\n      //\n\n      tempObjects[i].misInfoDetailedMsg = misInformationTopic[0];\n      tempObjects[i].rewardValue = misInformationTopic[1]; //console.log(tempObjects[i]); // Access object properties\n\n      setMyObjects(myObjects => [...myObjects, tempObjects[i]]);\n    } //setMyObjects(tempObjects);\n    //setMyObjects([...myObjects, tempObjects]);\n    //console.log(tempObjects);\n\n  };\n\n  const handlePost = async signer => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const contract = misInfoTopicAddresses[2];\n    const misInfoTopicContract = misInfoApp(provider, contract);\n    const misInfoTopicSigner = misInfoTopicContract.connect(signer);\n    const misInformationTopicResponse = await misInfoTopicSigner.createPost(\"Evidence test posted\"); //console.log(misInformationTopicResponse);\n  };\n\n  const handleStarClick = newRating => {\n    setRating(newRating);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navbar-brand\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"navbar-item is-size-4\",\n            children: \"Debunking Misinformation through a Decentralized Social Media Platform\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"navbarMenu\",\n          className: \"navbar-menu\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"navbar-end is-align-items-center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button is-white connect-wallet\",\n              onClick: connectWallet,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"is-link has-text-weight-bold\",\n                children: walletAddress && walletAddress.length > 0 ? `Connected: ${walletAddress.substring(0, 6)}...${walletAddress.substring(38)}` : \"Connect Wallet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"hero is-fullheight\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"faucet-hero-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container has-text-centered main-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title is-1\",\n            children: \"Possible Misinformation that requires debunking! \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Post evidence information if you believe this event is around a misinformation.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CreateMisinformationApp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box address-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: getContractAddresses,\n                  className: \"button is-link is-medium\",\n                  children: \"Refresh to see existing reward scopes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"list\",\n                  children: misInfoTopicAddresses.map((address, item) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"list-item\",\n                      children: address\n                    }, item, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => fetchAvailableMisInfos(address, signer, item),\n                      children: \"Click to fetch the misinformation post!\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 23\n                    }, this), selectedItemIndex >= 0 && selectedItemIndex === item && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [\"Reward value: \", rewardObjects[0]]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 223,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [\"Reward Message: \", rewardObjects[1]]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 224,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(CreateMisinformationEvidence, {\n                        address: address\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 226,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [postEvidences.length > 0 && selectedItemIndex >= 0 && selectedItemIndex === item && /*#__PURE__*/_jsxDEV(\"ul\", {\n                        children: postEvidences.map((obj, item) => /*#__PURE__*/_jsxDEV(\"li\", {\n                          children: [obj.postMsg, /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"star-rating\",\n                            children: [...Array(5)].map((star, index) => {\n                              return /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: index < rating ? 'on' : 'off',\n                                onClick: () => handleStarClick(index + 1),\n                                children: \"\\u2605\"\n                              }, index, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 239,\n                                columnNumber: 37\n                              }, this);\n                            })\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 236,\n                            columnNumber: 33\n                          }, this)]\n                        }, item, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 235,\n                          columnNumber: 31\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 233,\n                        columnNumber: 27\n                      }, this), postEvidences.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: \"No items found.\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 254,\n                        columnNumber: 56\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 231,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 67\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handlePost(signer),\n                  children: \"Test only\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Fcrp318ZEZqAj0wCpjf9+HppBlc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","useCallback","misInfo","misInfoApp","CreateMisinformationEvidence","Web3","ethers","CreateMisinformationApp","App","walletAddress","setWalletAddress","misinfoContract","setMisinfoContract","signer","setSigner","misInfoTopicAddresses","setMisInforTopicAddresses","misInfoTopicDetails","setMisInforTopicDetails","misInfoTopicPosts","setMisInforTopicPosts","postEvidences","setPostEvidences","myObjects","setMyObjects","rewardObjects","setRewardObjects","selectedItemIndex","setSelectedItemIndex","rating","setRating","connectWallet","window","ethereum","console","log","provider","providers","Web3Provider","accounts","send","getSigner","err","error","message","getCurrentWalletConnected","length","addWalletListener","on","getContractAddresses","misInfoContractSigner","connect","misinformationContracts","getDeployedMisInfos","handleUpdateString","fetchAvailableMisInfos","address","item","tempObject","rewardValue","misInfoDetailedMsg","tempPosts","postMsg","postAddress","misInfoTopicContract","misInfoTopicSigner","misInformationTopic","sendMisinfoAppDetails","misInformationEvidenceAddresses","sendDebunkingUserAddresses","i","sendDebunkingUserStruct","tempObjects","Array","fill","map","contract","handlePost","misInformationTopicResponse","createPost","handleStarClick","newRating","substring","obj","star","index"],"sources":["C:/Users/vemprala/Documents/Blockchain Projects/faucet-dapp-starter-code-connect-wallet/src/App.js"],"sourcesContent":["import { useEffect, useState, useCallback } from \"react\";\r\nimport \"./App.css\";\r\nimport misInfo from './misInfo';\r\nimport misInfoApp from './misInfoApp';\r\nimport CreateMisinformationEvidence from \"./Components/CreateMisinfoAppEvidence.js\";\r\nimport Web3 from 'web3';\r\nimport { ethers } from \"ethers\";\r\nimport CreateMisinformationApp from './Components/CreateMisinfoApp.js';\r\n\r\nfunction App() {\r\n  const [walletAddress, setWalletAddress] = useState(\"\");\r\n  const [misinfoContract, setMisinfoContract] = useState();\r\n  const [signer, setSigner] = useState();\r\n  const [misInfoTopicAddresses, setMisInforTopicAddresses] = useState([]);\r\n  const [misInfoTopicDetails, setMisInforTopicDetails] = useState([]);\r\n  const [misInfoTopicPosts, setMisInforTopicPosts] = useState([]);\r\n  const [postEvidences, setPostEvidences] = useState([]);\r\n  const [myObjects, setMyObjects] = useState([]);\r\n  const [rewardObjects, setRewardObjects] = useState([10, 'Hello']);\r\n  const [selectedItemIndex, setSelectedItemIndex] = useState(0);\r\n  const [rating, setRating] = useState(0);\r\n\r\n  const connectWallet = async () => {\r\n    if (typeof window != \"undefined\" && typeof window.ethereum != \"undefined\") {\r\n      try {\r\n        console.log(\"In connectWallet\");\r\n        /* MetaMask is installed */\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n\r\n        /* get accounts */\r\n        const accounts = await provider.send(\"eth_requestAccounts\", []);\r\n\r\n        /* get signer */\r\n        setSigner(await provider.getSigner());\r\n\r\n        /* local contract instance */\r\n        setMisinfoContract(misInfo(provider));\r\n\r\n        /* set active wallet address */\r\n        setWalletAddress(accounts[0]);\r\n        console.log(\"In connectWallet - End\");\r\n      } catch (err) {\r\n        console.error(err.message);\r\n      }\r\n    } else {\r\n      /* MetaMask is not installed */\r\n      console.log(\"Please install MetaMask\");\r\n    }\r\n  };\r\n\r\n  const getCurrentWalletConnected = async () => {\r\n    if (typeof window != \"undefined\" && typeof window.ethereum != \"undefined\") {\r\n      try {\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        const accounts = await provider.send(\"eth_accounts\", []);\r\n        setSigner(await provider.getSigner());\r\n\r\n        if (accounts.length > 0) {\r\n          setWalletAddress(accounts[0]);\r\n          console.log(accounts[0]);\r\n        } else {\r\n          console.log(\"Connect to MetaMask using the Connect button\");\r\n        }\r\n\r\n        /* local contract instance */\r\n        setMisinfoContract(misInfo(provider));\r\n        console.log(\"In getCurrentWalletConnected - End\");\r\n\r\n      } catch (err) {\r\n        console.error(err.message);\r\n      }\r\n    } else {\r\n      /* MetaMask is not installed */\r\n      console.log(\"Please install MetaMask\");\r\n    }\r\n  };\r\n\r\n  const addWalletListener = async () => {\r\n    if (typeof window != \"undefined\" && typeof window.ethereum != \"undefined\") {\r\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\r\n        setWalletAddress(accounts[0]);\r\n        console.log(accounts[0]);\r\n      });\r\n    } else {\r\n      /* MetaMask is not installed */\r\n      setWalletAddress(\"\");\r\n      console.log(\"Please install MetaMask\");\r\n    }\r\n  };\r\n\r\n  const getContractAddresses = async () => {\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    const misInfoContractSigner = misinfoContract.connect(signer);\r\n    const misinformationContracts = await misInfoContractSigner.getDeployedMisInfos();\r\n    setMisInforTopicAddresses(misinformationContracts);\r\n    handleUpdateString(signer);\r\n\r\n  }\r\n\r\n  const fetchAvailableMisInfos = async (address, signer, item) => {\r\n\r\n    setSelectedItemIndex(item);\r\n    console.log('item: ', item, 'selectedItemIndex ', selectedItemIndex);\r\n\r\n    const tempObject = { rewardValue: 0, misInfoDetailedMsg: \"\" };\r\n    const tempPosts = { postMsg: \"\", postAddress: \"\" };\r\n\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    const misInfoTopicContract = misInfoApp(provider, address);\r\n    const misInfoTopicSigner = misInfoTopicContract.connect(signer);\r\n    const misInformationTopic = await misInfoTopicSigner.sendMisinfoAppDetails();\r\n    const misInformationEvidenceAddresses = await misInfoTopicSigner.sendDebunkingUserAddresses();\r\n    console.log(\"misInformationEvidenceAddresses: \", misInformationEvidenceAddresses);\r\n    setPostEvidences([]);\r\n    if (misInformationEvidenceAddresses.length > 0) {\r\n      for (let i = 0; i < misInformationEvidenceAddresses.length; i++) {\r\n        tempPosts.postAddress = misInformationEvidenceAddresses[i];\r\n        tempPosts.postMsg = await misInfoTopicSigner.sendDebunkingUserStruct(misInformationEvidenceAddresses[i]);\r\n        console.log(\"tempPosts: \", tempPosts);\r\n        setPostEvidences((postEvidences) => [...postEvidences, tempPosts]);\r\n      }\r\n      console.log(\"postEvidences: \", postEvidences);\r\n    }\r\n\r\n    tempObject.misInfoDetailedMsg = misInformationTopic[0];\r\n    tempObject.rewardValue = misInformationTopic[1];\r\n\r\n    setRewardObjects([misInformationTopic[0], misInformationTopic[1]]); // Append to the existing array\r\n    console.log(\"setRewardObjects: \", rewardObjects);\r\n  };\r\n\r\n  const handleUpdateString = async (signer) => {\r\n\r\n    const tempObjects = Array(misInfoTopicAddresses.length)\r\n      .fill()\r\n      .map(() => ({ rewardValue: 0, misInfoDetailedMsg: \"\" }));\r\n\r\n    //const tempObjects = { rewardValue: 0, misInfoDetailedMsg: \"\"};\r\n\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    for (let i = 0; i < misInfoTopicAddresses.length; i++) {\r\n      const contract = misInfoTopicAddresses[i];\r\n      /* local contract instance */\r\n      const misInfoTopicContract = misInfoApp(provider, contract);\r\n      const misInfoTopicSigner = misInfoTopicContract.connect(signer);\r\n      const misInformationTopic = await misInfoTopicSigner.sendMisinfoAppDetails();\r\n      //console.log(misInformationTopic[1]);\r\n      //\r\n      tempObjects[i].misInfoDetailedMsg = misInformationTopic[0];\r\n      tempObjects[i].rewardValue = misInformationTopic[1];\r\n      //console.log(tempObjects[i]); // Access object properties\r\n      setMyObjects((myObjects) => [...myObjects, tempObjects[i]]);\r\n\r\n    }\r\n    //setMyObjects(tempObjects);\r\n    //setMyObjects([...myObjects, tempObjects]);\r\n    //console.log(tempObjects);\r\n  };\r\n\r\n  const handlePost = async (signer) => {\r\n\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    const contract = misInfoTopicAddresses[2];\r\n    const misInfoTopicContract = misInfoApp(provider, contract);\r\n    const misInfoTopicSigner = misInfoTopicContract.connect(signer);\r\n    const misInformationTopicResponse = await misInfoTopicSigner.createPost(\"Evidence test posted\");\r\n    //console.log(misInformationTopicResponse);\r\n  };\r\n\r\n  const handleStarClick = (newRating) => {\r\n    setRating(newRating);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar\">\r\n        <div className=\"container\">\r\n          <div className=\"navbar-brand\">\r\n            <h1 className=\"navbar-item is-size-4\">Debunking Misinformation through a Decentralized Social Media Platform</h1>\r\n          </div>\r\n          <div id=\"navbarMenu\" className=\"navbar-menu\">\r\n            <div className=\"navbar-end is-align-items-center\">\r\n              <button\r\n                className=\"button is-white connect-wallet\"\r\n                onClick={connectWallet}\r\n              >\r\n                <span className=\"is-link has-text-weight-bold\">\r\n                  {walletAddress && walletAddress.length > 0\r\n                    ? `Connected: ${walletAddress.substring(\r\n                      0,\r\n                      6\r\n                    )}...${walletAddress.substring(38)}`\r\n                    : \"Connect Wallet\"}\r\n                </span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n      <section className=\"hero is-fullheight\">\r\n        <div className=\"faucet-hero-body\">\r\n          <div className=\"container has-text-centered main-content\">\r\n            <h1 className=\"title is-1\">Possible Misinformation that requires debunking! </h1>\r\n            <p>Post evidence information if you believe this event is around a misinformation.</p>\r\n\r\n            <CreateMisinformationApp />\r\n\r\n            <div className=\"box address-box\">\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <button onClick={getContractAddresses} className=\"button is-link is-medium\">\r\n                    Refresh to see existing reward scopes\r\n                  </button>\r\n\r\n\r\n                  <ul className=\"list\">\r\n                    {misInfoTopicAddresses.map((address, item) => <div>\r\n                      <li className=\"list-item\" key={item}>{address}</li>\r\n                      <button onClick={() => fetchAvailableMisInfos(address, signer, item)}>Click to fetch the misinformation post!</button>\r\n\r\n                      {selectedItemIndex >= 0 && selectedItemIndex === item && (\r\n                        <div>\r\n                          <p>Reward value: {rewardObjects[0]}</p>\r\n                          <p>Reward Message: {rewardObjects[1]}</p>\r\n\r\n                          <CreateMisinformationEvidence address={address} />\r\n                        </div>\r\n\r\n                      )}\r\n\r\n                      <div>\r\n                        {postEvidences.length > 0 && selectedItemIndex >= 0 && selectedItemIndex === item && (\r\n                          <ul>\r\n                            {postEvidences.map((obj, item) => (\r\n                              <li key={item}>{obj.postMsg}\r\n                                <div className=\"star-rating\">\r\n                                  {[...Array(5)].map((star, index) => {\r\n                                  return (\r\n                                    <span\r\n                                      key={index}\r\n                                      className={index < rating ? 'on' : 'off'}\r\n                                      onClick={() => handleStarClick(index + 1)}\r\n                                    >\r\n                                      ★\r\n                                    </span>\r\n                                  );\r\n                                })}\r\n                                </div>\r\n\r\n                              </li>\r\n                            ))}\r\n                          </ul>\r\n                        )}\r\n                        {postEvidences.length === 0 && <p>No items found.</p>}\r\n                      </div>\r\n\r\n                    </div>\r\n                    )}\r\n                  </ul>\r\n\r\n                  <button onClick={() => handlePost(signer)}>Test only</button>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}